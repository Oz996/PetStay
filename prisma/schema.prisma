generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String
}

model Rental {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  type          String
  name          String
  description   String
  city          String
  city_short    String
  address       String
  country       String
  dateArrival   String
  dateDeparture String
  pet_policy    String
  sound_level   String
  latitude      Float
  longitude     Float
  people        Int
  isFee         Boolean
  price         Int
  rooms         Int
  bathroom      Int
  beds          Int
  amenities     Amenities?
  dog_amenities DogAmenities?
  rating        Rating?
  neighborhood  Neighborhood[]
  gallery       Gallery[]
  review        Review[]
  feats         Feats[]
}

model Amenities {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  self_check_in Boolean
  wifi          Boolean
  free_parking  Boolean
  kitchen       Boolean
  bath_tub      Boolean
  rental        Rental? @relation(fields: [rentalId], references: [id])
  rentalId      String? @unique @db.ObjectId
}

model DogAmenities {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  microwave Boolean
  shower    Boolean
  dog_food  Boolean
  cats      Boolean
  rental    Rental? @relation(fields: [rentalId], references: [id])
  rentalId  String? @unique @db.ObjectId
}

model Neighborhood {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  distance Int
  rental   Rental? @relation(fields: [rentalId], references: [id])
  rentalId String? @db.ObjectId
}

model Rating {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  rating   String
  votes    Int
  rental   Rental? @relation(fields: [rentalId], references: [id])
  rentalId String? @unique @db.ObjectId
  review   Review?
}

model Review {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  review   String
  rental   Rental? @relation(fields: [rentalId], references: [id])
  rentalId String? @db.ObjectId
  rating   Rating? @relation(fields: [ratingId], references: [id])
  ratingId String? @unique @db.ObjectId
}

model Gallery {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl String
  rental   Rental? @relation(fields: [rentalId], references: [id])
  rentalId String? @db.ObjectId
}

model Feats {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  feat     String
  rental   Rental? @relation(fields: [rentalId], references: [id])
  rentalId String? @db.ObjectId
}
